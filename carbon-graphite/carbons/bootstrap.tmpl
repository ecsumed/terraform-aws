sudo apt install -y \
libpango1.0-0 \
libcairo2 \
libpq-dev \
apache2 \
python-pip \
build-essential \
libpangocairo-1.0-0 \
libffi-dev \
libapache2-mod-wsgi \
htop \
git \
unzip \
libz-dev \
libncurses5-dev \
sysstat \

############### Install atop latest ########################
wget https://github.com/Atoptool/atop/archive/master.zip
unzip master.zip
cd atop-master/
sudo make systemdinstall
############################################################

sudo export PYTHONPATH="/opt/graphite/lib/:/opt/graphite/webapp/"
sudo pip install --no-binary=:all: https://github.com/graphite-project/whisper/tarball/master
sudo pip install --no-binary=:all: https://github.com/graphite-project/carbon/tarball/master
sudo pip install --no-binary=:all: https://github.com/graphite-project/carbon/tarball/master
sudo pip install --no-binary=:all: https://github.com/graphite-project/graphite-web/tarball/master
sudo pip install carbonate

cat>>/tmp/graphite_vhost<<EOF
LoadModule wsgi_module modules/mod_wsgi.so

WSGISocketPrefix /var/run/wsgi

Listen 80
<VirtualHost *:80>

    ServerName graphite
    DocumentRoot "/opt/graphite/webapp"
    ErrorLog /opt/graphite/storage/log/webapp/error.log
    CustomLog /opt/graphite/storage/log/webapp/access.log common

    WSGIDaemonProcess graphite-web processes=5 threads=5 display-name='$%{GROUP}' inactivity-timeout=120
    WSGIProcessGroup graphite-web
    WSGIApplicationGroup $%{GLOBAL}
    WSGIImportScript /opt/graphite/conf/graphite.wsgi process-group=graphite-web application-group=$%{GLOBAL}

    WSGIScriptAlias / /opt/graphite/conf/graphite.wsgi

    # Alias /static/ /opt/graphite/static/
    Alias /static/ /opt/graphite/webapp/content/

    <Directory /opt/graphite/static/>
            Require all granted
    </Directory>

    <Directory /opt/graphite/webapp/content>
            Require all granted
    </Directory>

    <Directory /opt/graphite/conf/>
            Require all granted
    </Directory>
</VirtualHost>
EOF

sudo mv /tmp/graphite_vhost /etc/apache2/sites-available/graphite.conf

sudo rm /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-enabled/000-default.conf
sudo ln -s /etc/apache2/sites-available/graphite.conf /etc/apache2/sites-enabled/

sudo PYTHONPATH=/opt/graphite/webapp django-admin.py migrate --settings=graphite.settings --run-syncdb

sudo cp /opt/graphite/conf/graphite.wsgi.example /opt/graphite/conf/graphite.wsgi

sudo chown www-data:www-data /opt/graphite/storage/graphite.db
sudo chown www-data:www-data /opt/graphite/webapp/
sudo chown www-data:www-data /opt/graphite/storage/log/webapp/*
sudo chown www-data:www-data /opt/graphite/storage/

sudo echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'testpass')" | sudo PYTHONPATH=/opt/graphite/webapp django-admin.py shell --settings=graphite.settings

sudo mkdir /mnt/whisper
sudo mkdir /mnt/dump
sudo rm -rf /opt/graphite/storage/whisper
sudo ln -s /mnt/whisper /opt/graphite/storage/whisper

cat>>/tmp/carbon_conf<<EOF
[cache]
LINE_RECEIVER_INTERFACE = 0.0.0.0
PICKLE_RECEIVER_INTERFACE = 0.0.0.0
CACHE_QUERY_INTERFACE = 0.0.0.0

ENABLE_TAGS = False

[cache:${carbon_ch}]
LINE_RECEIVER_PORT = 2003
PICKLE_RECEIVER_PORT = 2004
CACHE_QUERY_PORT = 7002

MAX_CACHE_SIZE = inf
MAX_UPDATES_PER_SECOND = 50000
MAX_CREATES_PER_MINUTE = 50000
USE_FLOW_CONTROL = True

LOG_UPDATES = False
LOG_CREATES = True
LOG_CACHE_HITS = False
LOG_CACHE_QUEUE_SORTS = False

[relay]
LINE_RECEIVER_INTERFACE = 0.0.0.0
PICKLE_RECEIVER_INTERFACE = 0.0.0.0

[relay:b]
LINE_RECEIVER_PORT = 2013
PICKLE_RECEIVER_PORT = 2014
PICKLE_RECEIVER_MAX_LENGTH = 1048576

RELAY_METHOD = consistent-hashing
REPLICATION_FACTOR = 2
DIVERSE_REPLICAS = True

# DESTINATIONS = 54.184.213.85:2004:a, 34.222.90.15:2004:b, 54.188.213.166:2004:c, 34.219.249.78:2004:d

MAX_QUEUE_SIZE = 100000
MAX_DATAPOINTS_PER_MESSAGE = 5000

QUEUE_LOW_WATERMARK_PCT = 0.8
TIME_TO_DEFER_SENDING = 0.0001

USE_FLOW_CONTROL = True

USE_RATIO_RESET=False
MIN_RESET_STAT_FLOW=1000
MIN_RESET_RATIO=0.9
MIN_RESET_INTERVAL=121

EOF

cat>>/tmp/storage-schemas.conf<<EOF
[default]
pattern = .*
retentions = 150s:1d,300s:2d,600s:3d,1200s:4d,2400s:5d
EOF

#############Install go carbon###############
wget https://github.com/lomik/go-carbon/releases/download/v0.14.0/go-carbon_0.14.0_amd64.deb
sudo dpkg -i go-carbon_0.14.0_amd64.deb

cat>>/tmp/go-carbon.conf<<EOF
[common]
user = "carbon"
graph-prefix = "carbon.agents.{host}"
metric-endpoint = "local"
metric-interval = "1m0s"
max-cpu = 3

[whisper]
data-dir = "/mnt/whisper"
schemas-file = "/opt/graphite/conf/storage-schemas.conf"
workers = 6
max-updates-per-second = 0
max-creates-per-second = 0
hard-max-creates-per-second = false
sparse-create = false
flock = false
enabled = true
hash-filenames = true

[cache]
max-size = 1000000
write-strategy = "max"

[udp]
listen = "0.0.0.0:2003"
enabled = false
buffer-size = 0

[tcp]
listen = "0.0.0.0:2003"
enabled = true
buffer-size = 0

[pickle]
listen = "0.0.0.0:2004"
max-message-size = 67108864
enabled = false
buffer-size = 0

[carbonlink]
listen = "0.0.0.0:7002"
enabled = true
read-timeout = "30s"

[grpc]
listen = "127.0.0.1:7003"
enabled = false

[tags]
enabled = false

[carbonserver]
enabled = false

[dump]
enabled = true
path = "/mnt/dump"
# Restore speed. 0 - unlimited
restore-per-second = 0

[pprof]
enabled = false

[[logging]]
logger = ""
file = "/var/log/go-carbon/go-carbon.log"
level = "info"
encoding = "mixed"
encoding-time = "iso8601"
encoding-duration = "seconds"
EOF
#############################################

###############Install go####################
sudo wget https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz -O /tmp/go.tar.gz
sudo tar -C /usr/local -xzf /tmp/go.tar.gz
sudo grep "go/bin" /root/.profile -q || echo "export PATH=$PATH:/usr/local/go/bin" | sudo tee -a /root/.profile
sudo export PATH=$PATH:/usr/local/go/bin
#############################################

sudo apachectl -t && /usr/sbin/service apache2 restart

sudo cp /tmp/carbon_conf /opt/graphite/conf/carbon.conf
sudo cp /tmp/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf
sudo cp /tmp/go-carbon.conf /etc/go-carbon/go-carbon.conf

# sudo /opt/graphite/bin/carbon-cache.py --instance=${carbon_ch} start
sudo systemctl restart go-carbon

sudo chown carbon:carbon /mnt/whisper -R
sudo chown carbon:carbon /mnt/dump -R

sudo /usr/sbin/service apache2 restart
echo 'done'
